# Generated by Django 2.2.7 on 2019-11-24 12:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('user_id', models.IntegerField(db_column='User_ID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, db_column='First_Name', max_length=32, null=True)),
                ('last_name', models.CharField(blank=True, db_column='Last_Name', max_length=32, null=True)),
                ('email_id', models.CharField(blank=True, db_column='Email_ID', max_length=128, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=32, null=True)),
                ('address_line1', models.CharField(blank=True, db_column='Address_Line1', max_length=128, null=True)),
                ('address_line2', models.CharField(blank=True, db_column='Address_Line2', max_length=128, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=32, null=True)),
                ('pincode', models.CharField(blank=True, db_column='Pincode', max_length=10, null=True)),
                ('contact_number', models.IntegerField(blank=True, db_column='Contact_Number', null=True)),
                ('user_type_id', models.IntegerField(blank=True, db_column='User_Type_ID', null=True)),
            ],
            options={
                'db_table': 'account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bin',
            fields=[
                ('bin_id', models.IntegerField(db_column='Bin_ID', primary_key=True, serialize=False)),
                ('bin_type', models.CharField(blank=True, db_column='Bin_Type', max_length=32, null=True)),
                ('bin_weight', models.IntegerField(blank=True, db_column='Bin_Weight', null=True)),
            ],
            options={
                'db_table': 'bin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('block_id', models.IntegerField(db_column='Block_ID', primary_key=True, serialize=False)),
                ('block_name', models.CharField(blank=True, db_column='Block_Name', max_length=32, null=True)),
                ('route_id', models.IntegerField(blank=True, db_column='Route_ID', null=True)),
            ],
            options={
                'db_table': 'block',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.IntegerField(db_column='Customer_ID', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, db_column='User_ID', null=True)),
                ('block_id', models.IntegerField(blank=True, db_column='Block_ID', null=True)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FirstappTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'firstapp_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageDetail',
            fields=[
                ('message_id', models.IntegerField(db_column='Message_ID', primary_key=True, serialize=False)),
                ('message_description', models.CharField(blank=True, db_column='Message_Description', max_length=32, null=True)),
            ],
            options={
                'db_table': 'message_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationDetail',
            fields=[
                ('notification_id', models.IntegerField(db_column='Notification_ID', primary_key=True, serialize=False)),
                ('request_id', models.IntegerField(blank=True, db_column='Request_ID', null=True)),
                ('message_id', models.IntegerField(blank=True, db_column='Message_ID', null=True)),
                ('notification_type', models.CharField(blank=True, db_column='Notification_Type', max_length=32, null=True)),
            ],
            options={
                'db_table': 'notification_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestDetail',
            fields=[
                ('request_id', models.IntegerField(db_column='Request_ID', primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField(blank=True, db_column='Customer_ID', null=True)),
                ('trip_id', models.IntegerField(blank=True, db_column='Trip_ID', null=True)),
                ('request_type', models.CharField(blank=True, db_column='Request_Type', max_length=128, null=True)),
                ('request_date', models.DateField(blank=True, db_column='Request_Date', null=True)),
                ('pickup_date', models.DateField(blank=True, db_column='Pickup_Date', null=True)),
                ('request_status', models.CharField(blank=True, db_column='Request_status', max_length=32, null=True)),
                ('bin_id', models.IntegerField(blank=True, db_column='Bin_ID', null=True)),
            ],
            options={
                'db_table': 'request_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.IntegerField(db_column='Route_ID', primary_key=True, serialize=False)),
                ('route_name', models.CharField(blank=True, db_column='Route_Name', max_length=32, null=True)),
            ],
            options={
                'db_table': 'route',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('request_id', models.IntegerField(db_column='Request_ID', primary_key=True, serialize=False)),
                ('request_score', models.FloatField(blank=True, db_column='Request_Score', null=True)),
                ('request_distance', models.IntegerField(blank=True, db_column='Request_Distance', null=True)),
                ('request_weight', models.IntegerField(blank=True, db_column='Request_Weight', null=True)),
                ('request_age', models.IntegerField(blank=True, db_column='Request_Age', null=True)),
                ('request_distance_score', models.FloatField(blank=True, db_column='Request_Distance_Score', null=True)),
                ('request_weight_score', models.FloatField(blank=True, db_column='Request_Weight_Score', null=True)),
                ('request_age_score', models.FloatField(blank=True, db_column='Request_Age_Score', null=True)),
            ],
            options={
                'db_table': 'score',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('trip_id', models.AutoField(db_column='Trip_ID', default='0', primary_key=True, serialize=False)),
                ('trip_date', models.DateField(blank=True, db_column='Trip_Date', null=True)),
                ('route_id', models.IntegerField(blank=True, db_column='Route_ID', null=True)),
            ],
            options={
                'db_table': 'trip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('truck_id', models.IntegerField(db_column='Truck_ID', primary_key=True, serialize=False)),
                ('trip_id', models.IntegerField(blank=True, db_column='Trip_ID', null=True)),
                ('truck_capacity', models.IntegerField(blank=True, db_column='Truck_Capacity', null=True)),
                ('truck_type', models.IntegerField(blank=True, db_column='Truck_Type', null=True)),
                ('truck_weight', models.IntegerField(blank=True, db_column='Truck_Weight', null=True)),
                ('truck_status', models.CharField(blank=True, db_column='Truck_Status', max_length=32, null=True)),
            ],
            options={
                'db_table': 'truck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TruckDriver',
            fields=[
                ('truck_driver_id', models.IntegerField(db_column='Truck_Driver_ID', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, db_column='User_ID', null=True)),
                ('driver_status', models.CharField(blank=True, db_column='Driver_status', max_length=32, null=True)),
                ('service_hours', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'truck_driver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('fullname', models.CharField(blank=True, max_length=50, null=True)),
                ('nickname', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('user_type_id', models.IntegerField(db_column='User_Type_ID', primary_key=True, serialize=False)),
                ('user_type', models.CharField(blank=True, db_column='User_Type', max_length=32, null=True)),
            ],
            options={
                'db_table': 'user_type',
                'managed': False,
            },
        ),
    ]
